import requests
import json
import os

# Definir o caminho absoluto para o arquivo apis.json
current_dir = os.path.dirname(os.path.abspath(__file__))
json_path = os.path.join(current_dir, 'apis.json')

# Carregar as APIs do arquivo JSON
with open(json_path, 'r') as f:
    apis = json.load(f)

# Função genérica para processar requisições e lidar com erros
def process_request(url):
    try:
        response = requests.get(url, timeout=10)
        response.raise_for_status()  # Verifica se a resposta contém um status de erro HTTP
        return response.json()  # Tenta converter a resposta em JSON
    except requests.exceptions.HTTPError as http_err:
        return f"HTTP error occurred: {http_err}"  # Retorna o erro HTTP
    except requests.exceptions.RequestException as req_err:
        return f"Request error occurred: {req_err}"  # Retorna qualquer erro de requisição
    except ValueError:
        return "Invalid JSON received"  # Retorna erro se a resposta não for JSON válido
    except Exception as err:
        return f"Other error occurred: {err}"  # Captura qualquer outro tipo de erro

# Função para realizar consulta de CPF
def consultar_cpf():
    cpf = input("Digite o CPF para consulta: ").strip()
    for api_group in apis:
        if 'cpf_mid' in api_group:
            url = api_group['cpf_mid'][0].format(cpf)
            print("Consultando CPF...")
            resultado = process_request(url)
            print(f"Resultado: {resultado}")
            break

# Função para realizar consulta de CNPJ
def consultar_cnpj():
    cnpj = input("Digite o CNPJ para consulta: ").strip()
    for api_group in apis:
        if 'cnpj_mid' in api_group:
            url = api_group['cnpj_mid'][0].format(cnpj)
            print("Consultando CNPJ...")
            resultado = process_request(url)
            print(f"Resultado: {resultado}")
            break

# Função para realizar consulta de Nome
def consultar_nome():
    nome = input("Digite o Nome para consulta: ").strip()
    for api_group in apis:
        if 'nome_123' in api_group:
            url = api_group['nome_123'][0].format(nome)
            print("Consultando Nome...")
            resultado = process_request(url)
            print(f"Resultado: {resultado}")
            break

# Função para realizar consulta de Placa
def consultar_placa():
    placa = input("Digite a Placa para consulta: ").strip()
    for api_group in apis:
        if 'placa_mid' in api_group:
            url = api_group['placa_mid'][0].format(placa)
            print("Consultando Placa...")
            resultado = process_request(url)
            print(f"Resultado: {resultado}")
            break

# Função principal para exibir o menu e realizar as consultas
def main():
    while True:
        print("\nEscolha o tipo de consulta:")
        print("1. Consultar CPF")
        print("2. Consultar CNPJ")
        print("3. Consultar Nome")
        print("4. Consultar Placa")
        print("5. Sair")

        escolha = input("Digite o número da sua escolha: ").strip()

        if escolha == '1':
            consultar_cpf()
        elif escolha == '2':
            consultar_cnpj()
        elif escolha == '3':
            consultar_nome()
        elif escolha == '4':
            consultar_placa()
        elif escolha == '5':
            print("Saindo...")
            break
        else:
            print("Escolha inválida. Tente novamente.")

# Verifica se o script está sendo executado diretamente
if __name__ == "__main__":
    main()
